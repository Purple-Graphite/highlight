// GENERATED CODE - DO NOT MODIFY BY HAND

import '../src/mode.dart';
import '../src/common_modes.dart';

final javascript = Mode(
    refs: {
      '~exports~PARAMS_CONTAINS~9': Mode(begin: "\\(", end: "\\)", keywords: {
        "\$pattern": "[A-Za-z\$_][0-9A-Za-z\$_]*",
        "keyword": [
          "as",
          "in",
          "of",
          "if",
          "for",
          "while",
          "finally",
          "var",
          "new",
          "function",
          "do",
          "return",
          "void",
          "else",
          "break",
          "catch",
          "instanceof",
          "with",
          "throw",
          "case",
          "default",
          "try",
          "switch",
          "continue",
          "typeof",
          "delete",
          "let",
          "yield",
          "const",
          "class",
          "debugger",
          "async",
          "await",
          "static",
          "import",
          "from",
          "export",
          "extends"
        ],
        "literal": ["true", "false", "null", "undefined", "NaN", "Infinity"],
        "built_in": [
          "setInterval",
          "setTimeout",
          "clearInterval",
          "clearTimeout",
          "require",
          "exports",
          "eval",
          "isFinite",
          "isNaN",
          "parseFloat",
          "parseInt",
          "decodeURI",
          "decodeURIComponent",
          "encodeURI",
          "encodeURIComponent",
          "escape",
          "unescape",
          "arguments",
          "this",
          "super",
          "console",
          "window",
          "document",
          "localStorage",
          "module",
          "global",
          "Intl",
          "DataView",
          "Number",
          "Math",
          "Date",
          "String",
          "RegExp",
          "Object",
          "Function",
          "Boolean",
          "Error",
          "Symbol",
          "Set",
          "Map",
          "WeakSet",
          "WeakMap",
          "Proxy",
          "Reflect",
          "JSON",
          "Promise",
          "Float64Array",
          "Int16Array",
          "Int32Array",
          "Int8Array",
          "Uint16Array",
          "Uint32Array",
          "Float32Array",
          "Array",
          "Uint8Array",
          "Uint8ClampedArray",
          "ArrayBuffer",
          "EvalError",
          "InternalError",
          "RangeError",
          "ReferenceError",
          "SyntaxError",
          "TypeError",
          "URIError"
        ]
      }, contains: [
        Mode(self: true),
        Mode(ref: '~exports~PARAMS_CONTAINS~0'),
        APOS_STRING_MODE,
        QUOTE_STRING_MODE,
        Mode(ref: '~exports~PARAMS_CONTAINS~3'),
        Mode(ref: '~exports~PARAMS_CONTAINS~3~starts~contains~1~contains~3'),
        Mode(ref: '~exports~PARAMS_CONTAINS~3~starts~contains~1~contains~4'),
        Mode(ref: '~exports~PARAMS_CONTAINS~3~starts~contains~1~contains~5'),
        REGEXP_MODE,
        Mode(ref: '~exports~PARAMS_CONTAINS~3~starts~contains~1~contains~7')
      ]),
      '~exports~PARAMS_CONTAINS~3~starts~contains~1~contains~7':
          Mode(begin: "\\{", end: "\\}", keywords: {
        "\$pattern": "[A-Za-z\$_][0-9A-Za-z\$_]*",
        "keyword": [
          "as",
          "in",
          "of",
          "if",
          "for",
          "while",
          "finally",
          "var",
          "new",
          "function",
          "do",
          "return",
          "void",
          "else",
          "break",
          "catch",
          "instanceof",
          "with",
          "throw",
          "case",
          "default",
          "try",
          "switch",
          "continue",
          "typeof",
          "delete",
          "let",
          "yield",
          "const",
          "class",
          "debugger",
          "async",
          "await",
          "static",
          "import",
          "from",
          "export",
          "extends"
        ],
        "literal": ["true", "false", "null", "undefined", "NaN", "Infinity"],
        "built_in": [
          "setInterval",
          "setTimeout",
          "clearInterval",
          "clearTimeout",
          "require",
          "exports",
          "eval",
          "isFinite",
          "isNaN",
          "parseFloat",
          "parseInt",
          "decodeURI",
          "decodeURIComponent",
          "encodeURI",
          "encodeURIComponent",
          "escape",
          "unescape",
          "arguments",
          "this",
          "super",
          "console",
          "window",
          "document",
          "localStorage",
          "module",
          "global",
          "Intl",
          "DataView",
          "Number",
          "Math",
          "Date",
          "String",
          "RegExp",
          "Object",
          "Function",
          "Boolean",
          "Error",
          "Symbol",
          "Set",
          "Map",
          "WeakSet",
          "WeakMap",
          "Proxy",
          "Reflect",
          "JSON",
          "Promise",
          "Float64Array",
          "Int16Array",
          "Int32Array",
          "Int8Array",
          "Uint16Array",
          "Uint32Array",
          "Float32Array",
          "Array",
          "Uint8Array",
          "Uint8ClampedArray",
          "ArrayBuffer",
          "EvalError",
          "InternalError",
          "RangeError",
          "ReferenceError",
          "SyntaxError",
          "TypeError",
          "URIError"
        ]
      }, contains: [
        Mode(self: true),
        APOS_STRING_MODE,
        QUOTE_STRING_MODE,
        Mode(ref: '~exports~PARAMS_CONTAINS~3'),
        Mode(ref: '~exports~PARAMS_CONTAINS~3~starts~contains~1~contains~3'),
        Mode(ref: '~exports~PARAMS_CONTAINS~3~starts~contains~1~contains~4'),
        Mode(ref: '~exports~PARAMS_CONTAINS~3~starts~contains~1~contains~5'),
        REGEXP_MODE
      ]),
      '~exports~PARAMS_CONTAINS~3~starts~contains~1~contains~5': Mode(
          className: "number",
          variants: [
            Mode(
                begin:
                    "(\\b(0|[1-9](_?[0-9])*|0[0-7]*[89][0-9]*)((\\.([0-9](_?[0-9])*))|\\.)?|(\\.([0-9](_?[0-9])*)))[eE][+-]?([0-9](_?[0-9])*)\\b"),
            Mode(
                begin:
                    "\\b(0|[1-9](_?[0-9])*|0[0-7]*[89][0-9]*)\\b((\\.([0-9](_?[0-9])*))\\b|\\.)?|(\\.([0-9](_?[0-9])*))\\b"),
            Mode(begin: "\\b(0|[1-9](_?[0-9])*)n\\b"),
            Mode(begin: "\\b0[xX][0-9a-fA-F](_?[0-9a-fA-F])*n?\\b"),
            Mode(begin: "\\b0[bB][0-1](_?[0-1])*n?\\b"),
            Mode(begin: "\\b0[oO][0-7](_?[0-7])*n?\\b"),
            Mode(begin: "\\b0[0-7]+n?\\b")
          ],
          relevance: 0),
      '~exports~PARAMS_CONTAINS~3~starts~contains~1~contains~4': Mode(
          className: "string",
          begin: "`",
          end: "`",
          contains: [
            BACKSLASH_ESCAPE,
            Mode(ref: '~exports~PARAMS_CONTAINS~3~starts~contains~1')
          ]),
      '~exports~PARAMS_CONTAINS~3~starts~contains~1~contains~3': Mode(
          begin: "css`",
          end: "",
          starts: Mode(end: "`", returnEnd: false, contains: [
            BACKSLASH_ESCAPE,
            Mode(ref: '~exports~PARAMS_CONTAINS~3~starts~contains~1')
          ], subLanguage: [
            "css"
          ])),
      '~exports~PARAMS_CONTAINS~3': Mode(
          begin: "html`",
          end: "",
          starts: Mode(end: "`", returnEnd: false, contains: [
            BACKSLASH_ESCAPE,
            Mode(className: "subst", begin: "\\\$\\{", end: "\\}", keywords: {
              "\$pattern": "[A-Za-z\$_][0-9A-Za-z\$_]*",
              "keyword": [
                "as",
                "in",
                "of",
                "if",
                "for",
                "while",
                "finally",
                "var",
                "new",
                "function",
                "do",
                "return",
                "void",
                "else",
                "break",
                "catch",
                "instanceof",
                "with",
                "throw",
                "case",
                "default",
                "try",
                "switch",
                "continue",
                "typeof",
                "delete",
                "let",
                "yield",
                "const",
                "class",
                "debugger",
                "async",
                "await",
                "static",
                "import",
                "from",
                "export",
                "extends"
              ],
              "literal": [
                "true",
                "false",
                "null",
                "undefined",
                "NaN",
                "Infinity"
              ],
              "built_in": [
                "setInterval",
                "setTimeout",
                "clearInterval",
                "clearTimeout",
                "require",
                "exports",
                "eval",
                "isFinite",
                "isNaN",
                "parseFloat",
                "parseInt",
                "decodeURI",
                "decodeURIComponent",
                "encodeURI",
                "encodeURIComponent",
                "escape",
                "unescape",
                "arguments",
                "this",
                "super",
                "console",
                "window",
                "document",
                "localStorage",
                "module",
                "global",
                "Intl",
                "DataView",
                "Number",
                "Math",
                "Date",
                "String",
                "RegExp",
                "Object",
                "Function",
                "Boolean",
                "Error",
                "Symbol",
                "Set",
                "Map",
                "WeakSet",
                "WeakMap",
                "Proxy",
                "Reflect",
                "JSON",
                "Promise",
                "Float64Array",
                "Int16Array",
                "Int32Array",
                "Int8Array",
                "Uint16Array",
                "Uint32Array",
                "Float32Array",
                "Array",
                "Uint8Array",
                "Uint8ClampedArray",
                "ArrayBuffer",
                "EvalError",
                "InternalError",
                "RangeError",
                "ReferenceError",
                "SyntaxError",
                "TypeError",
                "URIError"
              ]
            }, contains: [
              APOS_STRING_MODE,
              QUOTE_STRING_MODE,
              Mode(ref: '~exports~PARAMS_CONTAINS~3'),
              Mode(
                  ref:
                      '~exports~PARAMS_CONTAINS~3~starts~contains~1~contains~3'),
              Mode(
                  ref:
                      '~exports~PARAMS_CONTAINS~3~starts~contains~1~contains~4'),
              Mode(
                  ref:
                      '~exports~PARAMS_CONTAINS~3~starts~contains~1~contains~5'),
              REGEXP_MODE,
              Mode(
                  ref:
                      '~exports~PARAMS_CONTAINS~3~starts~contains~1~contains~7')
            ])
          ], subLanguage: [
            "xml"
          ])),
      '~exports~PARAMS_CONTAINS~0': Mode(className: "comment", variants: [
        Mode(
            className: "comment",
            begin: "\\/\\*\\*(?!\\/)",
            end: "\\*/",
            contains: [
              Mode(className: "doctag", begin: "@[A-Za-z]+", contains: [
                Mode(className: "type", begin: "\\{", end: "\\}", relevance: 0),
                Mode(
                    className: "variable",
                    begin: "[A-Za-z\$_][0-9A-Za-z\$_]*(?=\\s*(-)|\$)",
                    endsParent: true,
                    relevance: 0),
                Mode(begin: "(?=[^\\n])\\s", relevance: 0)
              ]),
              PHRASAL_WORDS_MODE,
              Mode(
                  className: "doctag",
                  begin: "(?:TODO|FIXME|NOTE|BUG|OPTIMIZE|HACK|XXX):",
                  relevance: 0)
            ],
            relevance: 0),
        C_BLOCK_COMMENT_MODE,
        C_LINE_COMMENT_MODE
      ]),
      '~contains~11~contains~2': Mode(
          className: "params",
          begin: "\\(",
          end: "\\)",
          excludeBegin: true,
          excludeEnd: true,
          keywords: {
            "\$pattern": "[A-Za-z\$_][0-9A-Za-z\$_]*",
            "keyword": [
              "as",
              "in",
              "of",
              "if",
              "for",
              "while",
              "finally",
              "var",
              "new",
              "function",
              "do",
              "return",
              "void",
              "else",
              "break",
              "catch",
              "instanceof",
              "with",
              "throw",
              "case",
              "default",
              "try",
              "switch",
              "continue",
              "typeof",
              "delete",
              "let",
              "yield",
              "const",
              "class",
              "debugger",
              "async",
              "await",
              "static",
              "import",
              "from",
              "export",
              "extends"
            ],
            "literal": [
              "true",
              "false",
              "null",
              "undefined",
              "NaN",
              "Infinity"
            ],
            "built_in": [
              "setInterval",
              "setTimeout",
              "clearInterval",
              "clearTimeout",
              "require",
              "exports",
              "eval",
              "isFinite",
              "isNaN",
              "parseFloat",
              "parseInt",
              "decodeURI",
              "decodeURIComponent",
              "encodeURI",
              "encodeURIComponent",
              "escape",
              "unescape",
              "arguments",
              "this",
              "super",
              "console",
              "window",
              "document",
              "localStorage",
              "module",
              "global",
              "Intl",
              "DataView",
              "Number",
              "Math",
              "Date",
              "String",
              "RegExp",
              "Object",
              "Function",
              "Boolean",
              "Error",
              "Symbol",
              "Set",
              "Map",
              "WeakSet",
              "WeakMap",
              "Proxy",
              "Reflect",
              "JSON",
              "Promise",
              "Float64Array",
              "Int16Array",
              "Int32Array",
              "Int8Array",
              "Uint16Array",
              "Uint32Array",
              "Float32Array",
              "Array",
              "Uint8Array",
              "Uint8ClampedArray",
              "ArrayBuffer",
              "EvalError",
              "InternalError",
              "RangeError",
              "ReferenceError",
              "SyntaxError",
              "TypeError",
              "URIError"
            ]
          },
          contains: [
            Mode(ref: '~exports~PARAMS_CONTAINS~0'),
            APOS_STRING_MODE,
            QUOTE_STRING_MODE,
            Mode(ref: '~exports~PARAMS_CONTAINS~3'),
            Mode(
                ref: '~exports~PARAMS_CONTAINS~3~starts~contains~1~contains~3'),
            Mode(
                ref: '~exports~PARAMS_CONTAINS~3~starts~contains~1~contains~4'),
            Mode(
                ref: '~exports~PARAMS_CONTAINS~3~starts~contains~1~contains~5'),
            REGEXP_MODE,
            Mode(
                ref: '~exports~PARAMS_CONTAINS~3~starts~contains~1~contains~7'),
            Mode(ref: '~exports~PARAMS_CONTAINS~9')
          ]),
    },
    name: "Javascript",
    aliases: ["js", "jsx", "mjs", "cjs"],
    keywords: {
      "\$pattern": "[A-Za-z\$_][0-9A-Za-z\$_]*",
      "keyword": [
        "as",
        "in",
        "of",
        "if",
        "for",
        "while",
        "finally",
        "var",
        "new",
        "function",
        "do",
        "return",
        "void",
        "else",
        "break",
        "catch",
        "instanceof",
        "with",
        "throw",
        "case",
        "default",
        "try",
        "switch",
        "continue",
        "typeof",
        "delete",
        "let",
        "yield",
        "const",
        "class",
        "debugger",
        "async",
        "await",
        "static",
        "import",
        "from",
        "export",
        "extends"
      ],
      "literal": ["true", "false", "null", "undefined", "NaN", "Infinity"],
      "built_in": [
        "setInterval",
        "setTimeout",
        "clearInterval",
        "clearTimeout",
        "require",
        "exports",
        "eval",
        "isFinite",
        "isNaN",
        "parseFloat",
        "parseInt",
        "decodeURI",
        "decodeURIComponent",
        "encodeURI",
        "encodeURIComponent",
        "escape",
        "unescape",
        "arguments",
        "this",
        "super",
        "console",
        "window",
        "document",
        "localStorage",
        "module",
        "global",
        "Intl",
        "DataView",
        "Number",
        "Math",
        "Date",
        "String",
        "RegExp",
        "Object",
        "Function",
        "Boolean",
        "Error",
        "Symbol",
        "Set",
        "Map",
        "WeakSet",
        "WeakMap",
        "Proxy",
        "Reflect",
        "JSON",
        "Promise",
        "Float64Array",
        "Int16Array",
        "Int32Array",
        "Int8Array",
        "Uint16Array",
        "Uint32Array",
        "Float32Array",
        "Array",
        "Uint8Array",
        "Uint8ClampedArray",
        "ArrayBuffer",
        "EvalError",
        "InternalError",
        "RangeError",
        "ReferenceError",
        "SyntaxError",
        "TypeError",
        "URIError"
      ]
    },
    illegal: "#(?![\$_A-z])",
    contains: [
      Mode(
          className: "meta",
          begin: "^#![ ]*\\/.*\\bnode\\b.*",
          end: "\$",
          relevance: 5,
          label: "shebang",
          binary: "node"),
      Mode(
          label: "use_strict",
          className: "meta",
          relevance: 10,
          begin: "^\\s*['\"]use (strict|asm)['\"]"),
      APOS_STRING_MODE,
      QUOTE_STRING_MODE,
      Mode(ref: '~exports~PARAMS_CONTAINS~3'),
      Mode(ref: '~exports~PARAMS_CONTAINS~3~starts~contains~1~contains~3'),
      Mode(ref: '~exports~PARAMS_CONTAINS~3~starts~contains~1~contains~4'),
      Mode(ref: '~exports~PARAMS_CONTAINS~0'),
      Mode(ref: '~exports~PARAMS_CONTAINS~3~starts~contains~1~contains~5'),
      Mode(
          begin:
              "[{,\\n]\\s*(?=(((\\/\\/.*\$)|(\\/\\*(\\*[^/]|[^*])*\\*\\/))\\s*)*[A-Za-z\$_][0-9A-Za-z\$_]*\\s*:)",
          relevance: 0,
          contains: [
            Mode(
                className: "attr",
                begin: "[A-Za-z\$_][0-9A-Za-z\$_]*(?=\\s*:)",
                relevance: 0)
          ]),
      Mode(
          begin:
              "(!|!=|!==|%|%=|&|&&|&=|\\*|\\*=|\\+|\\+=|,|-|-=|/=|/|:|;|<<|<<=|<=|<|===|==|=|>>>=|>>=|>=|>>>|>>|>|\\?|\\[|\\{|\\(|\\^|\\^=|\\||\\|=|\\|\\||\\x7e|\\b(case|return|throw)\\b)\\s*",
          keywords: "return throw case",
          contains: [
            Mode(ref: '~exports~PARAMS_CONTAINS~0'),
            REGEXP_MODE,
            Mode(
                className: "function",
                begin:
                    "(\\([^()]*(\\([^()]*(\\([^()]*\\)[^()]*)*\\)[^()]*)*\\)|[a-zA-Z_]\\w*)\\s*=>",
                returnBegin: true,
                end: "\\s*=>",
                contains: [
                  Mode(className: "params", variants: [
                    Mode(begin: "[a-zA-Z_]\\w*", relevance: 0),
                    Mode(className: null, begin: "\\(\\s*\\)", skip: true),
                    Mode(
                        begin: "\\(",
                        end: "\\)",
                        excludeBegin: true,
                        excludeEnd: true,
                        keywords: {
                          "\$pattern": "[A-Za-z\$_][0-9A-Za-z\$_]*",
                          "keyword": [
                            "as",
                            "in",
                            "of",
                            "if",
                            "for",
                            "while",
                            "finally",
                            "var",
                            "new",
                            "function",
                            "do",
                            "return",
                            "void",
                            "else",
                            "break",
                            "catch",
                            "instanceof",
                            "with",
                            "throw",
                            "case",
                            "default",
                            "try",
                            "switch",
                            "continue",
                            "typeof",
                            "delete",
                            "let",
                            "yield",
                            "const",
                            "class",
                            "debugger",
                            "async",
                            "await",
                            "static",
                            "import",
                            "from",
                            "export",
                            "extends"
                          ],
                          "literal": [
                            "true",
                            "false",
                            "null",
                            "undefined",
                            "NaN",
                            "Infinity"
                          ],
                          "built_in": [
                            "setInterval",
                            "setTimeout",
                            "clearInterval",
                            "clearTimeout",
                            "require",
                            "exports",
                            "eval",
                            "isFinite",
                            "isNaN",
                            "parseFloat",
                            "parseInt",
                            "decodeURI",
                            "decodeURIComponent",
                            "encodeURI",
                            "encodeURIComponent",
                            "escape",
                            "unescape",
                            "arguments",
                            "this",
                            "super",
                            "console",
                            "window",
                            "document",
                            "localStorage",
                            "module",
                            "global",
                            "Intl",
                            "DataView",
                            "Number",
                            "Math",
                            "Date",
                            "String",
                            "RegExp",
                            "Object",
                            "Function",
                            "Boolean",
                            "Error",
                            "Symbol",
                            "Set",
                            "Map",
                            "WeakSet",
                            "WeakMap",
                            "Proxy",
                            "Reflect",
                            "JSON",
                            "Promise",
                            "Float64Array",
                            "Int16Array",
                            "Int32Array",
                            "Int8Array",
                            "Uint16Array",
                            "Uint32Array",
                            "Float32Array",
                            "Array",
                            "Uint8Array",
                            "Uint8ClampedArray",
                            "ArrayBuffer",
                            "EvalError",
                            "InternalError",
                            "RangeError",
                            "ReferenceError",
                            "SyntaxError",
                            "TypeError",
                            "URIError"
                          ]
                        },
                        contains: [
                          Mode(ref: '~exports~PARAMS_CONTAINS~0'),
                          APOS_STRING_MODE,
                          QUOTE_STRING_MODE,
                          Mode(ref: '~exports~PARAMS_CONTAINS~3'),
                          Mode(
                              ref:
                                  '~exports~PARAMS_CONTAINS~3~starts~contains~1~contains~3'),
                          Mode(
                              ref:
                                  '~exports~PARAMS_CONTAINS~3~starts~contains~1~contains~4'),
                          Mode(
                              ref:
                                  '~exports~PARAMS_CONTAINS~3~starts~contains~1~contains~5'),
                          REGEXP_MODE,
                          Mode(
                              ref:
                                  '~exports~PARAMS_CONTAINS~3~starts~contains~1~contains~7'),
                          Mode(ref: '~exports~PARAMS_CONTAINS~9')
                        ])
                  ])
                ]),
            Mode(begin: ",", relevance: 0),
            Mode(className: "", begin: "\\s", end: "\\s*", skip: true),
            Mode(variants: [
              Mode(begin: "<>", end: "</>"),
              Mode(
                  begin: "<[A-Za-z0-9\\\\._:-]+",
                  end: "\\/[A-Za-z0-9\\\\._:-]+>|\\/>")
            ], subLanguage: [
              "xml"
            ], contains: [
              Mode(
                  begin: "<[A-Za-z0-9\\\\._:-]+",
                  end: "\\/[A-Za-z0-9\\\\._:-]+>|\\/>",
                  skip: true,
                  contains: [Mode(self: true)])
            ])
          ],
          relevance: 0),
      Mode(
          className: "function",
          beginKeywords: "function",
          end: "[{;]",
          excludeEnd: true,
          keywords: {
            "\$pattern": "[A-Za-z\$_][0-9A-Za-z\$_]*",
            "keyword": [
              "as",
              "in",
              "of",
              "if",
              "for",
              "while",
              "finally",
              "var",
              "new",
              "function",
              "do",
              "return",
              "void",
              "else",
              "break",
              "catch",
              "instanceof",
              "with",
              "throw",
              "case",
              "default",
              "try",
              "switch",
              "continue",
              "typeof",
              "delete",
              "let",
              "yield",
              "const",
              "class",
              "debugger",
              "async",
              "await",
              "static",
              "import",
              "from",
              "export",
              "extends"
            ],
            "literal": [
              "true",
              "false",
              "null",
              "undefined",
              "NaN",
              "Infinity"
            ],
            "built_in": [
              "setInterval",
              "setTimeout",
              "clearInterval",
              "clearTimeout",
              "require",
              "exports",
              "eval",
              "isFinite",
              "isNaN",
              "parseFloat",
              "parseInt",
              "decodeURI",
              "decodeURIComponent",
              "encodeURI",
              "encodeURIComponent",
              "escape",
              "unescape",
              "arguments",
              "this",
              "super",
              "console",
              "window",
              "document",
              "localStorage",
              "module",
              "global",
              "Intl",
              "DataView",
              "Number",
              "Math",
              "Date",
              "String",
              "RegExp",
              "Object",
              "Function",
              "Boolean",
              "Error",
              "Symbol",
              "Set",
              "Map",
              "WeakSet",
              "WeakMap",
              "Proxy",
              "Reflect",
              "JSON",
              "Promise",
              "Float64Array",
              "Int16Array",
              "Int32Array",
              "Int8Array",
              "Uint16Array",
              "Uint32Array",
              "Float32Array",
              "Array",
              "Uint8Array",
              "Uint8ClampedArray",
              "ArrayBuffer",
              "EvalError",
              "InternalError",
              "RangeError",
              "ReferenceError",
              "SyntaxError",
              "TypeError",
              "URIError"
            ]
          },
          contains: [
            Mode(self: true),
            Mode(
                className: "title",
                begin: "[A-Za-z\$_][0-9A-Za-z\$_]*",
                relevance: 0),
            Mode(ref: '~contains~11~contains~2')
          ],
          illegal: "%"),
      Mode(beginKeywords: "while if switch catch for"),
      Mode(
          className: "function",
          begin:
              "[a-zA-Z_]\\w*\\([^()]*(\\([^()]*(\\([^()]*\\)[^()]*)*\\)[^()]*)*\\)\\s*\\{",
          returnBegin: true,
          contains: [
            Mode(ref: '~contains~11~contains~2'),
            Mode(
                className: "title",
                begin: "[A-Za-z\$_][0-9A-Za-z\$_]*",
                relevance: 0)
          ]),
      Mode(variants: [
        Mode(begin: "\\.[A-Za-z\$_][0-9A-Za-z\$_]*"),
        Mode(begin: "\\\$[A-Za-z\$_][0-9A-Za-z\$_]*")
      ], relevance: 0),
      Mode(
          className: "class",
          beginKeywords: "class",
          end: "[{;=]",
          excludeEnd: true,
          illegal: "[:\"[\\]]",
          contains: [Mode(beginKeywords: "extends"), UNDERSCORE_TITLE_MODE]),
      Mode(
          begin: "\\b(?=constructor)",
          end: "[{;]",
          excludeEnd: true,
          contains: [
            Mode(
                className: "title",
                begin: "[A-Za-z\$_][0-9A-Za-z\$_]*",
                relevance: 0),
            Mode(self: true),
            Mode(ref: '~contains~11~contains~2')
          ]),
      Mode(
          begin: "(get|set)\\s+(?=[A-Za-z\$_][0-9A-Za-z\$_]*\\()",
          end: "\\{",
          keywords: "get set",
          contains: [
            Mode(
                className: "title",
                begin: "[A-Za-z\$_][0-9A-Za-z\$_]*",
                relevance: 0),
            Mode(begin: "\\(\\)"),
            Mode(ref: '~contains~11~contains~2')
          ]),
      Mode(begin: "\\\$[(.]")
    ]);
